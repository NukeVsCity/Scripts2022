--Phantom Forces - Gun Mods 2023
--working as of 06/02/2023

syn.run_on_actor(getactors()[1], [[
--Init
if getgenv().connections and getgenv().connections["update"] then getgenv().connections["update"]:Disconnect() else getgenv().connections = {} end

local RunService = game:GetService("RunService")

local require = getrenv().shared.require
assert(require, "Missing shared.require")

local network = require("network")
local WeaponControllerInterface = require("WeaponControllerInterface")
local MainCameraObject = require("MainCameraObject")
local HudStatusInterface = require("HudStatusInterface")
local FirearmObject = require("FirearmObject")
local MeleeObject = require("MeleeObject")

local oldSetSway = MainCameraObject.setSway
local oldShake = MainCameraObject.shake

local controller = nil

--Functions

local function getActiveWeapon()
    if controller then
        return controller.getActiveWeapon(controller)
    end
end; local function getCurrentWeaponRegistry()
    if controller then
        return controller._activeWeaponRegistry
    end
end; local function getWeaponData(Registry)
    if Registry._weaponData then
        return Registry._weaponData
    end
end; local function reloadWeapon()
    local weapon = getActiveWeapon()
    local magSize = weapon:getWeaponStat("magsize")
    local newCount = (magSize + (weapon:getWeaponStat("chamber") and 1 or 0)) - weapon._magCount
    if weapon._spareCount > newCount then
        weapon._magCount += newCount
        weapon._spareCount -= newCount
    else
        weapon._magCount += weapon._spareCount
        weapon._spareCount = 0
    end

    network:send("reload")
    HudStatusInterface.updateAmmo(weapon)
end

--Gun Mods / Update

getgenv().connections["update"] = RunService.RenderStepped:Connect(function()
    controller = WeaponControllerInterface.getController()
    if not controller then return end
    local registries = getCurrentWeaponRegistry()

    --Gun Mods
    for _,registry in pairs(registries) do
        local weaponData = getWeaponData(registry)
        setreadonly(weaponData, false)

        --Instant Equip
        if weaponData.equipspeed then weaponData.equipspeed = tick() end

        --Instant Reload [old]
        --if mopsHub.Gun_Mods.InstantReload and weaponData.animations then
        --    for _,anim in pairs(weaponData.animations) do
        --        if typeof(anim) == "table" then
        --            if string.find(string.lower(_), "reload") then
        --                anim.timescale = 0
        --            end
        --        end
        --    end
        --end

        --Instant Reload [new + faster]
        if getActiveWeapon() then
            local weapon = getActiveWeapon()
            if weapon._magCount <= 1 then
                reloadWeapon()
            end
        end

        --Instant Reload Cancel
        if registry._reloadCancelTime then registry._reloadCancelTime = 0 end

        --Automatic Weapon
        if weaponData.firemodes then weaponData.firemodes = { true } end

        --No Recoil / No Spread
        if weaponData.camkickmax then
            local nvec = Vector3.new()
            weaponData.camkickmin = nvec
            weaponData.camkickmax = nvec
            weaponData.aimcamkickmin = nvec
            weaponData.aimcamkickmax = nvec
            weaponData.aimtranskickmin = nvec
            weaponData.aimtranskickmax = nvec
            weaponData.transkickmin = nvec
            weaponData.transkickmax = nvec
            weaponData.rotkickmin = nvec
            weaponData.rotkickmax = nvec
            weaponData.aimrotkickmin = nvec
            weaponData.aimrotkickmax = nvec

            weaponData.hipfirespreadrecover = 100
            weaponData.hipfirespread = 0
            weaponData.hipfirestability = 0
        end
        setreadonly(weaponData, true)
    end
end)

MainCameraObject.setSway = function(self, a)
    return oldSetSway(self, 0)
end
MainCameraObject.shake = function(self, a)
    return oldShake(self, Vector3.zero)
end
FirearmObject.walkSway = function(...)
    return CFrame.new()
end
FirearmObject.gunSway = function(...)
    return CFrame.new()
end
MeleeObject.walkSway = function(...)
    return CFrame.new()
end
MeleeObject.meleeSway = function(...)
    return CFrame.new()
end
]])

--mopsfl#4864
